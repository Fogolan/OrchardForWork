@model DashboardManaging.ViewModels.GmailApiViewModel
<p>Gmail API Quickstart</p>

<button id="authorize-button" style="display: none;">Authorize</button>
<button id="signout-button" style="display: none;">Sign Out</button>

<pre id="content"></pre>

<script type="text/javascript">
    var authorizeButton = document.getElementById('authorize-button');
    var signoutButton = document.getElementById('signout-button');

    function handleClientLoad() {
        gapi.load('client:auth2', initClient);
    }

    function initClient() {
        gapi.client.init({
            discoveryDocs: ["@Model.DiscoveryDocs"],
            clientId: '@Model.ClientId',
            scope: '@Model.Scopes'
        }).then(function () {
            gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);

            updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
            authorizeButton.onclick = handleAuthClick;
            signoutButton.onclick = handleSignoutClick;
        });
    }

    function updateSigninStatus(isSignedIn) {
        if (isSignedIn) {
            authorizeButton.style.display = 'none';
            signoutButton.style.display = 'block';
            listLabels();
        } else {
            authorizeButton.style.display = 'block';
            signoutButton.style.display = 'none';
        }
    }

    function handleAuthClick(event) {
        gapi.auth2.getAuthInstance().signIn();
    }

    function handleSignoutClick(event) {
        gapi.auth2.getAuthInstance().signOut();
    }

    function appendPre(message) {
        var pre = document.getElementById('content');
        var textContent = document.createTextNode(message + '\n');
        pre.appendChild(textContent);
    }

    function listLabels() {
        gapi.client.gmail.users.labels.list({
            'userId': 'me'
        }).then(function(response) {
            var labels = response.result.labels;
            appendPre('Labels:');

            if (labels && labels.length > 0) {
                for (i = 0; i < labels.length; i++) {
                    var label = labels[i];
                    appendPre(label.name);
                }
            } else {
                appendPre('No Labels found.');
            }
        });
    }

</script>

<script async defer src="https://apis.google.com/js/api.js"
        onload="this.onload=function(){};handleClientLoad();"
        onreadystatechange="if (this.readyState === 'complete') this.onload()">
</script>